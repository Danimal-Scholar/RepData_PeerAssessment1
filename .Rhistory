library(swirl)
swirl()
install_from_swirl('Data_Analysis')
swirl()
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0,10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
install_from_swirl('Exploratory_Data_Analysis')
plot(cars)
x
x
x <-c("a","b","c","d")
x <-c("a","b","c","d")
x
for(i in 1:4) {
print(x[i])
}
x
for (i in 1:4) print(x[i])
x <-c("a","b","c","d")
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for (letter in x) {
print(letter)
}
for (i in 1:4) print(x[i])
x <-c("a","b","c","d")
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for (lette in x) {
print(lette)
}
x <-c(1, 2, 3, 4)
x <-c(1, 2, 3, 4)
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for (lette in x) {
print(lette)
}
for (i in 1:4) print(x[i])
swirl()
rep(1,4)
mapply(rep, 1:4, 4:1)
rnomm(5,5,2)
rnorm(5,5,2)
rnorm(5,5,2)
rnorm(5,5,2)
rnorm(1:5,1:5,2)
rnorm(5,1,2)
gl(3,10)
c(rnorm(10, funif(10, rnorm(10,1))))
c(rnorm(10, runif(10, rnorm(10,1))))
c(rnorm(10, runif(10, rnorm(10,1)))
c(rnorm(10), runif(10), rnorm(10,1))
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
tapply(x,f,mean)
tapply(x,f,mean, simplif = FALSE)
tapply(x,f,mean, simplify = FALSE)
tapply(x,f,mean, simplify = TRUE)
tapply(x,f,range, simplify = TRUE)
str(split)
gl(3,10)
f
split(x,f)
lapply(split(x,f),mean)
library(datasets)
head(airquality)
airquality
s <- split(airquality, airquality$Month
s <- split(airquality, airquality$Month)
s
x
x <- airquality
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]), na.rm = TRUE)
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
?str
list(f1,f2)
split(x,list(f1,f2))
x <- rnorm)10)
x <- rnorm(10)
split(x,list(f1,f2))
str(split(x,list(f1,f2)))
swirl
install.packages("swirl")
library("swirl")
debug(lm)
lm(y~x)
quit
x <- 2
options(error = recover)
read.csv("nosuchfile")
read.csv("nosuchfile")
swirl
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(clas_vect)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat = sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply(vector, index, function)
?tapply
table(flags$landmass)
table(flags$animalte)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
iris
tapply(iris, iris$virginica)
tapply(iris, iris$Species)
tapply(iris$Sepal.Length, iris$Species)
x <- tapply(iris$Sepal.Length, iris$Species)
x
x <- tapply(iris$Sepal.Length, iris$Species, mean)
x
colmeans(iris)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
?apply
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl),mean)
apply(mtcars,2,mean)
with(mtcars,tapply(mpg,cyl,mean))
range(with(mtcars,tapply(mpg,cyl,mean)))
26.66364-15.10000
debug(ls)
ls(0)
ls()
quit
q
tapply(iris, iris$virginica)
tapply(iris$Sepal.Length, iris$Species)
x <- tapply(iris$Sepal.Length, iris$Species, mean)
x
Q
ls
ls(0)
ls()
ls
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind,data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind,data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month,data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout =c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
myedit("plot2.R", local = TRUE)
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color * cut, data = diamonds)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
setwd("C:/Users/danim/Desktop/Coursera/reproducible_research/Course_project1/RepData_PeerAssessment1")
?png
